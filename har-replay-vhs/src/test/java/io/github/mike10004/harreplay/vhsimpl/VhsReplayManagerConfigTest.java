package io.github.mike10004.harreplay.vhsimpl;

import io.github.mike10004.harreplay.ReplayServerConfig;
import io.github.mike10004.harreplay.tests.Fixtures;
import org.apache.commons.io.FileUtils;
import org.junit.Test;

import java.io.File;
import java.io.IOException;

public class VhsReplayManagerConfigTest {

    @Test
    public void getDefault() throws IOException {
        // this is not a great test, but we have to link up the tests we have for reading HARs with the actual calls to construct HarReader instances
        ReplayServerConfig replayServerConfig = ReplayServerConfig.empty();
        File harFile = Fixtures.copyBrowsermobGeneratedHarFile(FileUtils.getTempDirectory().toPath());
        try {
            // this call parses the har, so it will fail if our default har reader can't read the slightly malformed har generated by browsermob
            VhsReplayManagerConfig.getDefault().responseManufacturerProvider.create(harFile, replayServerConfig);
        } finally {
            //noinspection ResultOfMethodCallIgnored
            harFile.delete();
        }
    }
}